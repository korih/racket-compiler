#lang racket

(require
  cpsc411/langs/v8
  rackunit)

(provide implement-mops)

;; paren-x64-mops-v8 -> paren-x64-v8
;; compiles p to Paren-x64 v8 by compiling mops to instructions on pointers with
;; index- and displacement-mode operands
(define/contract (implement-mops p)
  (-> paren-x64-mops-v8? paren-x64-v8?)

  ;; paren-x64-mops-v8.s -> paren-x64-v8.s
  (define (implement-mops-s s)
    (match s
      [`(with-label ,label ,s)
       `(with-label ,label ,(implement-mops-s s))]
      [`(set! ,reg_1 (mref ,reg_2 ,index))
       `(set! ,reg_1 (,reg_2 + ,index))]
      [`(mset! ,reg_1 ,index ,int32)
       `(set! (,reg_1 + ,index) ,int32)]
      [`(mset! ,reg_1 ,index ,trg)
       `(set! (,reg_1 + ,index) ,trg)]
      ;; Wildcard collapse case used because the remaining terminal cases of s
      ;; are not mops and do not require a transformation
      [_ s]))

  (match p
    [`(begin ,s ...)
     `(begin ,@(map implement-mops-s s))]))

(module+ test
  (check-equal? (implement-mops '(begin (set! rax 0)))
                '(begin (set! rax 0)))
  (check-equal? (implement-mops '(begin (mset! rax 0 1)))
                '(begin (set! (rax + 0) 1)))
  (check-equal? (implement-mops '(begin (mset! rax 0 rax)))
                '(begin (set! (rax + 0) rax)))
  (check-equal? (implement-mops '(begin (set! rax (mref rax 0))))
                '(begin (set! rax (rax + 0))))
  (check-equal? (implement-mops '(begin
                                   (set! rbx 10)
                                   (set! rbp 0)
                                   (set! rdi 0)
                                   (set! rsi 4)
                                   (with-label L.tmp.1 (set! rbx (- rbx 1)))
                                   (jump-if = L.tmp.2)
                                   (set! rbp (+ rbp rbx))
                                   (mset! rdi 0 rbp)
                                   (set! rdi (+ rdi rsi))
                                   (jump L.tmp.1)
                                   (with-label L.tmp.2 (set! rdi 0))
                                   (set! rax (mref rdi 0))))
                '(begin
                   (set! rbx 10)
                   (set! rbp 0)
                   (set! rdi 0)
                   (set! rsi 4)
                   (with-label L.tmp.1 (set! rbx (- rbx 1)))
                   (jump-if = L.tmp.2)
                   (set! rbp (+ rbp rbx))
                   (set! (rdi + 0) rbp)
                   (set! rdi (+ rdi rsi))
                   (jump L.tmp.1)
                   (with-label L.tmp.2 (set! rdi 0))
                   (set! rax (rdi + 0))))
  (check-equal? (implement-mops '(begin
                                   (with-label L.tmp.105 (set! rsp r15))
                                   (set! rdi 1)
                                   (set! rsi 2)
                                   (set! r15 rsp)
                                   (jump L.f.1)
                                   (with-label L.g.1 (set! rsp r15))
                                   (set! rax 8)
                                   (jump rsp)
                                   (with-label L.f.1 (set! (rbp - 24) r15))
                                   (set! (rbp - 8) rdi)
                                   (set! (rbp - 0) rsi)
                                   (set! rsp 10)
                                   (set! rsp (+ rsp 6))
                                   (set! (rbp - 16) r12)
                                   (set! r12 (+ r12 rsp))
                                   (set! rbp (- rbp 32))
                                   (set! r15 L.rp.21)
                                   (jump L.g.1)
                                   (with-label L.rp.21 (set! rbp (+ rbp 32)))
                                   (set! rsp rax)
                                   (jump L.tmp.103)
                                   (with-label L.tmp.102 (set! rbx 10))
                                   (set! rbx (+ rbx 6))
                                   (set! rsp r12)
                                   (set! r12 (+ r12 rbx))
                                   (set! rbx 8)
                                   (set! rbx (bitwise-and rbx 8))
                                   (set! rax (mref rsp rbx))
                                   (set! r10 (rbp - 24))
                                   (jump r10)
                                   (with-label L.tmp.104 (set! r10 (rbp - 0)))
                                   (set! r11 (rbp - 16))
                                   (mset! r11 rsp r10)
                                   (jump L.tmp.102)
                                   (with-label L.tmp.103 (set! r10 (rbp - 8)))
                                   (set! r11 (rbp - 16))
                                   (mset! r11 rsp r10)
                                   (jump L.tmp.102)))
                '(begin
                   (with-label L.tmp.105 (set! rsp r15))
                   (set! rdi 1)
                   (set! rsi 2)
                   (set! r15 rsp)
                   (jump L.f.1)
                   (with-label L.g.1 (set! rsp r15))
                   (set! rax 8)
                   (jump rsp)
                   (with-label L.f.1 (set! (rbp - 24) r15))
                   (set! (rbp - 8) rdi)
                   (set! (rbp - 0) rsi)
                   (set! rsp 10)
                   (set! rsp (+ rsp 6))
                   (set! (rbp - 16) r12)
                   (set! r12 (+ r12 rsp))
                   (set! rbp (- rbp 32))
                   (set! r15 L.rp.21)
                   (jump L.g.1)
                   (with-label L.rp.21 (set! rbp (+ rbp 32)))
                   (set! rsp rax)
                   (jump L.tmp.103)
                   (with-label L.tmp.102 (set! rbx 10))
                   (set! rbx (+ rbx 6))
                   (set! rsp r12)
                   (set! r12 (+ r12 rbx))
                   (set! rbx 8)
                   (set! rbx (bitwise-and rbx 8))
                   (set! rax (rsp + rbx))
                   (set! r10 (rbp - 24))
                   (jump r10)
                   (with-label L.tmp.104 (set! r10 (rbp - 0)))
                   (set! r11 (rbp - 16))
                   (set! (r11 + rsp) r10)
                   (jump L.tmp.102)
                   (with-label L.tmp.103 (set! r10 (rbp - 8)))
                   (set! r11 (rbp - 16))
                   (set! (r11 + rsp) r10)
                   (jump L.tmp.102)))
  (check-equal? (interp-paren-x64-v8 (implement-mops '(begin
                                                       (with-label L.__main.20 (set! (rbp - 0) r15))
                                                       (set! rbp (- rbp 24))
                                                       (set! r15 L.rp.13)
                                                       (jump L.v.4)
                                                       (with-label L.+.12 (set! r15 r15))
                                                       (set! r13 rdi)
                                                       (set! r14 rsi)
                                                       (set! r9 r14)
                                                       (set! r9 (bitwise-and r9 7))
                                                       (compare r9 0)
                                                       (jump-if = L.tmp.28)
                                                       (jump L.tmp.29)
                                                       (with-label L.tmp.28 (set! r9 14))
                                                       (jump L.tmp.30)
                                                       (with-label L.tmp.29 (set! r9 6))
                                                       (jump L.tmp.30)
                                                       (with-label L.tmp.30 (compare r9 6))
                                                       (jump-if != L.__nested.21)
                                                       (jump L.__nested.22)
                                                       (with-label L.tmp.25 (set! r9 14))
                                                       (jump L.tmp.27)
                                                       (with-label L.tmp.26 (set! r9 6))
                                                       (jump L.tmp.27)
                                                       (with-label L.tmp.27 (compare r9 6))
                                                       (jump-if != L.__nested.23)
                                                       (jump L.__nested.24)
                                                       (with-label L.__nested.23 (set! rax r13))
                                                       (set! rax (+ rax r14))
                                                       (jump r15)
                                                       (with-label L.__nested.24 (set! rax 574))
                                                       (jump r15)
                                                       (with-label L.__nested.21 (set! r9 r13))
                                                       (set! r9 (bitwise-and r9 7))
                                                       (compare r9 0)
                                                       (jump-if = L.tmp.25)
                                                       (jump L.tmp.26)
                                                       (with-label L.__nested.22 (set! rax 574))
                                                       (jump r15)
                                                       (with-label L.void?.11 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r14 r14)
                                                       (set! r14 (bitwise-and r14 255))
                                                       (compare r14 30)
                                                       (jump-if = L.__nested.31)
                                                       (jump L.__nested.32)
                                                       (with-label L.__nested.31 (set! rax 14))
                                                       (jump r15)
                                                       (with-label L.__nested.32 (set! rax 6))
                                                       (jump r15)
                                                       (with-label L.unsafe-vector-ref.3 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r13 rsi)
                                                       (set! r9 (mref r14 -3))
                                                       (compare r13 r9)
                                                       (jump-if < L.tmp.40)
                                                       (jump L.tmp.41)
                                                       (with-label L.tmp.40 (set! r9 14))
                                                       (jump L.tmp.42)
                                                       (with-label L.tmp.41 (set! r9 6))
                                                       (jump L.tmp.42)
                                                       (with-label L.tmp.42 (compare r9 6))
                                                       (jump-if != L.__nested.33)
                                                       (jump L.__nested.34)
                                                       (with-label L.tmp.37 (set! r9 14))
                                                       (jump L.tmp.39)
                                                       (with-label L.tmp.38 (set! r9 6))
                                                       (jump L.tmp.39)
                                                       (with-label L.tmp.39 (compare r9 6))
                                                       (jump-if != L.__nested.35)
                                                       (jump L.__nested.36)
                                                       (with-label L.__nested.35 (set! r13 r13))
                                                       (set! r13 (arithmetic-shift-right r13 3))
                                                       (set! r13 r13)
                                                       (set! r13 (* r13 8))
                                                       (set! r13 r13)
                                                       (set! r13 (+ r13 5))
                                                       (set! rax (mref r14 r13))
                                                       (jump r15)
                                                       (with-label L.__nested.36 (set! rax 2878))
                                                       (jump r15)
                                                       (with-label L.__nested.33 (compare r13 0))
                                                       (jump-if >= L.tmp.37)
                                                       (jump L.tmp.38)
                                                       (with-label L.__nested.34 (set! rax 2878))
                                                       (jump r15)
                                                       (with-label L.vector-ref.10 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r13 rsi)
                                                       (set! r9 r13)
                                                       (set! r9 (bitwise-and r9 7))
                                                       (compare r9 0)
                                                       (jump-if = L.tmp.50)
                                                       (jump L.tmp.51)
                                                       (with-label L.tmp.50 (set! r9 14))
                                                       (jump L.tmp.52)
                                                       (with-label L.tmp.51 (set! r9 6))
                                                       (jump L.tmp.52)
                                                       (with-label L.tmp.52 (compare r9 6))
                                                       (jump-if != L.__nested.43)
                                                       (jump L.__nested.44)
                                                       (with-label L.tmp.47 (set! r9 14))
                                                       (jump L.tmp.49)
                                                       (with-label L.tmp.48 (set! r9 6))
                                                       (jump L.tmp.49)
                                                       (with-label L.tmp.49 (compare r9 6))
                                                       (jump-if != L.__nested.45)
                                                       (jump L.__nested.46)
                                                       (with-label L.__nested.45 (set! rsi r13))
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.unsafe-vector-ref.3)
                                                       (with-label L.__nested.46 (set! rax 2878))
                                                       (jump r15)
                                                       (with-label L.__nested.43 (set! r9 r14))
                                                       (set! r9 (bitwise-and r9 7))
                                                       (compare r9 3)
                                                       (jump-if = L.tmp.47)
                                                       (jump L.tmp.48)
                                                       (with-label L.__nested.44 (set! rax 2878))
                                                       (jump r15)
                                                       (with-label L.unsafe-vector-set!.2 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r9 rsi)
                                                       (set! r13 rdx)
                                                       (set! r8 (mref r14 -3))
                                                       (compare r9 r8)
                                                       (jump-if < L.tmp.60)
                                                       (jump L.tmp.61)
                                                       (with-label L.tmp.60 (set! r8 14))
                                                       (jump L.tmp.62)
                                                       (with-label L.tmp.61 (set! r8 6))
                                                       (jump L.tmp.62)
                                                       (with-label L.tmp.62 (compare r8 6))
                                                       (jump-if != L.__nested.53)
                                                       (jump L.__nested.54)
                                                       (with-label L.tmp.57 (set! r8 14))
                                                       (jump L.tmp.59)
                                                       (with-label L.tmp.58 (set! r8 6))
                                                       (jump L.tmp.59)
                                                       (with-label L.tmp.59 (compare r8 6))
                                                       (jump-if != L.__nested.55)
                                                       (jump L.__nested.56)
                                                       (with-label L.__nested.55 (set! r9 r9))
                                                       (set! r9 (arithmetic-shift-right r9 3))
                                                       (set! r9 r9)
                                                       (set! r9 (* r9 8))
                                                       (set! r9 r9)
                                                       (set! r9 (+ r9 5))
                                                       (mset! r14 r9 r13)
                                                       (set! rax 30)
                                                       (jump r15)
                                                       (with-label L.__nested.56 (set! rax 2622))
                                                       (jump r15)
                                                       (with-label L.__nested.53 (compare r9 0))
                                                       (jump-if >= L.tmp.57)
                                                       (jump L.tmp.58)
                                                       (with-label L.__nested.54 (set! rax 2622))
                                                       (jump r15)
                                                       (with-label L.vector-set!.9 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r13 rsi)
                                                       (set! r9 rdx)
                                                       (set! r8 r13)
                                                       (set! r8 (bitwise-and r8 7))
                                                       (compare r8 0)
                                                       (jump-if = L.tmp.70)
                                                       (jump L.tmp.71)
                                                       (with-label L.tmp.70 (set! r8 14))
                                                       (jump L.tmp.72)
                                                       (with-label L.tmp.71 (set! r8 6))
                                                       (jump L.tmp.72)
                                                       (with-label L.tmp.72 (compare r8 6))
                                                       (jump-if != L.__nested.63)
                                                       (jump L.__nested.64)
                                                       (with-label L.tmp.67 (set! r8 14))
                                                       (jump L.tmp.69)
                                                       (with-label L.tmp.68 (set! r8 6))
                                                       (jump L.tmp.69)
                                                       (with-label L.tmp.69 (compare r8 6))
                                                       (jump-if != L.__nested.65)
                                                       (jump L.__nested.66)
                                                       (with-label L.__nested.65 (set! rdx r9))
                                                       (set! rsi r13)
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.unsafe-vector-set!.2)
                                                       (with-label L.__nested.66 (set! rax 2622))
                                                       (jump r15)
                                                       (with-label L.__nested.63 (set! r8 r14))
                                                       (set! r8 (bitwise-and r8 7))
                                                       (compare r8 3)
                                                       (jump-if = L.tmp.67)
                                                       (jump L.tmp.68)
                                                       (with-label L.__nested.64 (set! rax 2622))
                                                       (jump r15)
                                                       (with-label L.vector-init-loop.7 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r13 rsi)
                                                       (set! r9 rdx)
                                                       (compare r14 r13)
                                                       (jump-if = L.tmp.75)
                                                       (jump L.tmp.76)
                                                       (with-label L.tmp.75 (set! r8 14))
                                                       (jump L.tmp.77)
                                                       (with-label L.tmp.76 (set! r8 6))
                                                       (jump L.tmp.77)
                                                       (with-label L.tmp.77 (compare r8 6))
                                                       (jump-if != L.__nested.73)
                                                       (jump L.__nested.74)
                                                       (with-label L.__nested.73 (set! rax r9))
                                                       (jump r15)
                                                       (with-label L.__nested.74 (set! r8 r13))
                                                       (set! r8 (arithmetic-shift-right r8 3))
                                                       (set! r8 r8)
                                                       (set! r8 (* r8 8))
                                                       (set! r8 r8)
                                                       (set! r8 (+ r8 5))
                                                       (mset! r9 r8 0)
                                                       (set! r13 r13)
                                                       (set! r13 (+ r13 8))
                                                       (set! rdx r9)
                                                       (set! rsi r13)
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.vector-init-loop.7)
                                                       (with-label L.make-init-vector.1 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (compare r14 0)
                                                       (jump-if >= L.tmp.80)
                                                       (jump L.tmp.81)
                                                       (with-label L.tmp.80 (set! r13 14))
                                                       (jump L.tmp.82)
                                                       (with-label L.tmp.81 (set! r13 6))
                                                       (jump L.tmp.82)
                                                       (with-label L.tmp.82 (compare r13 6))
                                                       (jump-if != L.__nested.78)
                                                       (jump L.__nested.79)
                                                       (with-label L.__nested.78 (set! r9 r14))
                                                       (set! r9 (arithmetic-shift-right r9 3))
                                                       (set! r13 1)
                                                       (set! r13 (+ r13 r9))
                                                       (set! r9 r13)
                                                       (set! r9 (* r9 8))
                                                       (set! r13 r12)
                                                       (set! r12 (+ r12 r9))
                                                       (set! r13 r13)
                                                       (set! r13 (+ r13 3))
                                                       (mset! r13 -3 r14)
                                                       (set! r13 r13)
                                                       (set! rdx r13)
                                                       (set! rsi 0)
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.vector-init-loop.7)
                                                       (with-label L.__nested.79 (set! rax 3134))
                                                       (jump r15)
                                                       (with-label L.make-vector.8 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! r13 r14)
                                                       (set! r13 (bitwise-and r13 7))
                                                       (compare r13 0)
                                                       (jump-if = L.tmp.85)
                                                       (jump L.tmp.86)
                                                       (with-label L.tmp.85 (set! r13 14))
                                                       (jump L.tmp.87)
                                                       (with-label L.tmp.86 (set! r13 6))
                                                       (jump L.tmp.87)
                                                       (with-label L.tmp.87 (compare r13 6))
                                                       (jump-if != L.__nested.83)
                                                       (jump L.__nested.84)
                                                       (with-label L.__nested.83 (set! rdi r14))
                                                       (set! r15 r15)
                                                       (jump L.make-init-vector.1)
                                                       (with-label L.__nested.84 (set! rax 2110))
                                                       (jump r15)
                                                       (with-label L.v.4 (set! r15 r15))
                                                       (set! rdi 24)
                                                       (set! r15 r15)
                                                       (jump L.make-vector.8)
                                                       (with-label L.set-first.5 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! rdx 336)
                                                       (set! rsi 0)
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.vector-set!.9)
                                                       (with-label L.get-first.6 (set! r15 r15))
                                                       (set! r14 rdi)
                                                       (set! rsi 0)
                                                       (set! rdi r14)
                                                       (set! r15 r15)
                                                       (jump L.vector-ref.10)
                                                       (with-label L.rp.13 (set! rbp (+ rbp 24)))
                                                       (set! (rbp - 16) rax)
                                                       (set! rbp (- rbp 24))
                                                       (set! rdi (rbp - -8))
                                                       (set! r15 L.rp.14)
                                                       (jump L.set-first.5)
                                                       (with-label L.rp.14 (set! rbp (+ rbp 24)))
                                                       (set! r15 rax)
                                                       (set! rbp (- rbp 24))
                                                       (set! rdi r15)
                                                       (set! r15 L.rp.15)
                                                       (jump L.void?.11)
                                                       (with-label L.rp.15 (set! rbp (+ rbp 24)))
                                                       (set! r15 rax)
                                                       (compare r15 6)
                                                       (jump-if != L.tmp.17)
                                                       (jump L.tmp.18)
                                                       (with-label L.tmp.17 (set! (rbp - 8) 0))
                                                       (jump L.tmp.19)
                                                       (with-label L.tmp.18 (set! (rbp - 8) 318))
                                                       (jump L.tmp.19)
                                                       (with-label L.tmp.19 (set! rbp (- rbp 24)))
                                                       (set! rdi (rbp - -8))
                                                       (set! r15 L.rp.16)
                                                       (jump L.get-first.6)
                                                       (with-label L.rp.16 (set! rbp (+ rbp 24)))
                                                       (set! r15 rax)
                                                       (set! rsi r15)
                                                       (set! rdi (rbp - 8))
                                                       (set! r15 (rbp - 0))
                                                       (jump L.+.12))))
                (interp-paren-x64-v8 '(begin
                                        (with-label L.__main.20 (set! (rbp - 0) r15))
                                        (set! rbp (- rbp 24))
                                        (set! r15 L.rp.13)
                                        (jump L.v.4)
                                        (with-label L.+.12 (set! r15 r15))
                                        (set! r13 rdi)
                                        (set! r14 rsi)
                                        (set! r9 r14)
                                        (set! r9 (bitwise-and r9 7))
                                        (compare r9 0)
                                        (jump-if = L.tmp.28)
                                        (jump L.tmp.29)
                                        (with-label L.tmp.28 (set! r9 14))
                                        (jump L.tmp.30)
                                        (with-label L.tmp.29 (set! r9 6))
                                        (jump L.tmp.30)
                                        (with-label L.tmp.30 (compare r9 6))
                                        (jump-if != L.__nested.21)
                                        (jump L.__nested.22)
                                        (with-label L.tmp.25 (set! r9 14))
                                        (jump L.tmp.27)
                                        (with-label L.tmp.26 (set! r9 6))
                                        (jump L.tmp.27)
                                        (with-label L.tmp.27 (compare r9 6))
                                        (jump-if != L.__nested.23)
                                        (jump L.__nested.24)
                                        (with-label L.__nested.23 (set! rax r13))
                                        (set! rax (+ rax r14))
                                        (jump r15)
                                        (with-label L.__nested.24 (set! rax 574))
                                        (jump r15)
                                        (with-label L.__nested.21 (set! r9 r13))
                                        (set! r9 (bitwise-and r9 7))
                                        (compare r9 0)
                                        (jump-if = L.tmp.25)
                                        (jump L.tmp.26)
                                        (with-label L.__nested.22 (set! rax 574))
                                        (jump r15)
                                        (with-label L.void?.11 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r14 r14)
                                        (set! r14 (bitwise-and r14 255))
                                        (compare r14 30)
                                        (jump-if = L.__nested.31)
                                        (jump L.__nested.32)
                                        (with-label L.__nested.31 (set! rax 14))
                                        (jump r15)
                                        (with-label L.__nested.32 (set! rax 6))
                                        (jump r15)
                                        (with-label L.unsafe-vector-ref.3 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r13 rsi)
                                        (set! r9 (r14 + -3))
                                        (compare r13 r9)
                                        (jump-if < L.tmp.40)
                                        (jump L.tmp.41)
                                        (with-label L.tmp.40 (set! r9 14))
                                        (jump L.tmp.42)
                                        (with-label L.tmp.41 (set! r9 6))
                                        (jump L.tmp.42)
                                        (with-label L.tmp.42 (compare r9 6))
                                        (jump-if != L.__nested.33)
                                        (jump L.__nested.34)
                                        (with-label L.tmp.37 (set! r9 14))
                                        (jump L.tmp.39)
                                        (with-label L.tmp.38 (set! r9 6))
                                        (jump L.tmp.39)
                                        (with-label L.tmp.39 (compare r9 6))
                                        (jump-if != L.__nested.35)
                                        (jump L.__nested.36)
                                        (with-label L.__nested.35 (set! r13 r13))
                                        (set! r13 (arithmetic-shift-right r13 3))
                                        (set! r13 r13)
                                        (set! r13 (* r13 8))
                                        (set! r13 r13)
                                        (set! r13 (+ r13 5))
                                        (set! rax (r14 + r13))
                                        (jump r15)
                                        (with-label L.__nested.36 (set! rax 2878))
                                        (jump r15)
                                        (with-label L.__nested.33 (compare r13 0))
                                        (jump-if >= L.tmp.37)
                                        (jump L.tmp.38)
                                        (with-label L.__nested.34 (set! rax 2878))
                                        (jump r15)
                                        (with-label L.vector-ref.10 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r13 rsi)
                                        (set! r9 r13)
                                        (set! r9 (bitwise-and r9 7))
                                        (compare r9 0)
                                        (jump-if = L.tmp.50)
                                        (jump L.tmp.51)
                                        (with-label L.tmp.50 (set! r9 14))
                                        (jump L.tmp.52)
                                        (with-label L.tmp.51 (set! r9 6))
                                        (jump L.tmp.52)
                                        (with-label L.tmp.52 (compare r9 6))
                                        (jump-if != L.__nested.43)
                                        (jump L.__nested.44)
                                        (with-label L.tmp.47 (set! r9 14))
                                        (jump L.tmp.49)
                                        (with-label L.tmp.48 (set! r9 6))
                                        (jump L.tmp.49)
                                        (with-label L.tmp.49 (compare r9 6))
                                        (jump-if != L.__nested.45)
                                        (jump L.__nested.46)
                                        (with-label L.__nested.45 (set! rsi r13))
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.unsafe-vector-ref.3)
                                        (with-label L.__nested.46 (set! rax 2878))
                                        (jump r15)
                                        (with-label L.__nested.43 (set! r9 r14))
                                        (set! r9 (bitwise-and r9 7))
                                        (compare r9 3)
                                        (jump-if = L.tmp.47)
                                        (jump L.tmp.48)
                                        (with-label L.__nested.44 (set! rax 2878))
                                        (jump r15)
                                        (with-label L.unsafe-vector-set!.2 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r9 rsi)
                                        (set! r13 rdx)
                                        (set! r8 (r14 + -3))
                                        (compare r9 r8)
                                        (jump-if < L.tmp.60)
                                        (jump L.tmp.61)
                                        (with-label L.tmp.60 (set! r8 14))
                                        (jump L.tmp.62)
                                        (with-label L.tmp.61 (set! r8 6))
                                        (jump L.tmp.62)
                                        (with-label L.tmp.62 (compare r8 6))
                                        (jump-if != L.__nested.53)
                                        (jump L.__nested.54)
                                        (with-label L.tmp.57 (set! r8 14))
                                        (jump L.tmp.59)
                                        (with-label L.tmp.58 (set! r8 6))
                                        (jump L.tmp.59)
                                        (with-label L.tmp.59 (compare r8 6))
                                        (jump-if != L.__nested.55)
                                        (jump L.__nested.56)
                                        (with-label L.__nested.55 (set! r9 r9))
                                        (set! r9 (arithmetic-shift-right r9 3))
                                        (set! r9 r9)
                                        (set! r9 (* r9 8))
                                        (set! r9 r9)
                                        (set! r9 (+ r9 5))
                                        (set! (r14 + r9) r13)
                                        (set! rax 30)
                                        (jump r15)
                                        (with-label L.__nested.56 (set! rax 2622))
                                        (jump r15)
                                        (with-label L.__nested.53 (compare r9 0))
                                        (jump-if >= L.tmp.57)
                                        (jump L.tmp.58)
                                        (with-label L.__nested.54 (set! rax 2622))
                                        (jump r15)
                                        (with-label L.vector-set!.9 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r13 rsi)
                                        (set! r9 rdx)
                                        (set! r8 r13)
                                        (set! r8 (bitwise-and r8 7))
                                        (compare r8 0)
                                        (jump-if = L.tmp.70)
                                        (jump L.tmp.71)
                                        (with-label L.tmp.70 (set! r8 14))
                                        (jump L.tmp.72)
                                        (with-label L.tmp.71 (set! r8 6))
                                        (jump L.tmp.72)
                                        (with-label L.tmp.72 (compare r8 6))
                                        (jump-if != L.__nested.63)
                                        (jump L.__nested.64)
                                        (with-label L.tmp.67 (set! r8 14))
                                        (jump L.tmp.69)
                                        (with-label L.tmp.68 (set! r8 6))
                                        (jump L.tmp.69)
                                        (with-label L.tmp.69 (compare r8 6))
                                        (jump-if != L.__nested.65)
                                        (jump L.__nested.66)
                                        (with-label L.__nested.65 (set! rdx r9))
                                        (set! rsi r13)
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.unsafe-vector-set!.2)
                                        (with-label L.__nested.66 (set! rax 2622))
                                        (jump r15)
                                        (with-label L.__nested.63 (set! r8 r14))
                                        (set! r8 (bitwise-and r8 7))
                                        (compare r8 3)
                                        (jump-if = L.tmp.67)
                                        (jump L.tmp.68)
                                        (with-label L.__nested.64 (set! rax 2622))
                                        (jump r15)
                                        (with-label L.vector-init-loop.7 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r13 rsi)
                                        (set! r9 rdx)
                                        (compare r14 r13)
                                        (jump-if = L.tmp.75)
                                        (jump L.tmp.76)
                                        (with-label L.tmp.75 (set! r8 14))
                                        (jump L.tmp.77)
                                        (with-label L.tmp.76 (set! r8 6))
                                        (jump L.tmp.77)
                                        (with-label L.tmp.77 (compare r8 6))
                                        (jump-if != L.__nested.73)
                                        (jump L.__nested.74)
                                        (with-label L.__nested.73 (set! rax r9))
                                        (jump r15)
                                        (with-label L.__nested.74 (set! r8 r13))
                                        (set! r8 (arithmetic-shift-right r8 3))
                                        (set! r8 r8)
                                        (set! r8 (* r8 8))
                                        (set! r8 r8)
                                        (set! r8 (+ r8 5))
                                        (set! (r9 + r8) 0)
                                        (set! r13 r13)
                                        (set! r13 (+ r13 8))
                                        (set! rdx r9)
                                        (set! rsi r13)
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.vector-init-loop.7)
                                        (with-label L.make-init-vector.1 (set! r15 r15))
                                        (set! r14 rdi)
                                        (compare r14 0)
                                        (jump-if >= L.tmp.80)
                                        (jump L.tmp.81)
                                        (with-label L.tmp.80 (set! r13 14))
                                        (jump L.tmp.82)
                                        (with-label L.tmp.81 (set! r13 6))
                                        (jump L.tmp.82)
                                        (with-label L.tmp.82 (compare r13 6))
                                        (jump-if != L.__nested.78)
                                        (jump L.__nested.79)
                                        (with-label L.__nested.78 (set! r9 r14))
                                        (set! r9 (arithmetic-shift-right r9 3))
                                        (set! r13 1)
                                        (set! r13 (+ r13 r9))
                                        (set! r9 r13)
                                        (set! r9 (* r9 8))
                                        (set! r13 r12)
                                        (set! r12 (+ r12 r9))
                                        (set! r13 r13)
                                        (set! r13 (+ r13 3))
                                        (set! (r13 + -3) r14)
                                        (set! r13 r13)
                                        (set! rdx r13)
                                        (set! rsi 0)
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.vector-init-loop.7)
                                        (with-label L.__nested.79 (set! rax 3134))
                                        (jump r15)
                                        (with-label L.make-vector.8 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! r13 r14)
                                        (set! r13 (bitwise-and r13 7))
                                        (compare r13 0)
                                        (jump-if = L.tmp.85)
                                        (jump L.tmp.86)
                                        (with-label L.tmp.85 (set! r13 14))
                                        (jump L.tmp.87)
                                        (with-label L.tmp.86 (set! r13 6))
                                        (jump L.tmp.87)
                                        (with-label L.tmp.87 (compare r13 6))
                                        (jump-if != L.__nested.83)
                                        (jump L.__nested.84)
                                        (with-label L.__nested.83 (set! rdi r14))
                                        (set! r15 r15)
                                        (jump L.make-init-vector.1)
                                        (with-label L.__nested.84 (set! rax 2110))
                                        (jump r15)
                                        (with-label L.v.4 (set! r15 r15))
                                        (set! rdi 24)
                                        (set! r15 r15)
                                        (jump L.make-vector.8)
                                        (with-label L.set-first.5 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! rdx 336)
                                        (set! rsi 0)
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.vector-set!.9)
                                        (with-label L.get-first.6 (set! r15 r15))
                                        (set! r14 rdi)
                                        (set! rsi 0)
                                        (set! rdi r14)
                                        (set! r15 r15)
                                        (jump L.vector-ref.10)
                                        (with-label L.rp.13 (set! rbp (+ rbp 24)))
                                        (set! (rbp - 16) rax)
                                        (set! rbp (- rbp 24))
                                        (set! rdi (rbp - -8))
                                        (set! r15 L.rp.14)
                                        (jump L.set-first.5)
                                        (with-label L.rp.14 (set! rbp (+ rbp 24)))
                                        (set! r15 rax)
                                        (set! rbp (- rbp 24))
                                        (set! rdi r15)
                                        (set! r15 L.rp.15)
                                        (jump L.void?.11)
                                        (with-label L.rp.15 (set! rbp (+ rbp 24)))
                                        (set! r15 rax)
                                        (compare r15 6)
                                        (jump-if != L.tmp.17)
                                        (jump L.tmp.18)
                                        (with-label L.tmp.17 (set! (rbp - 8) 0))
                                        (jump L.tmp.19)
                                        (with-label L.tmp.18 (set! (rbp - 8) 318))
                                        (jump L.tmp.19)
                                        (with-label L.tmp.19 (set! rbp (- rbp 24)))
                                        (set! rdi (rbp - -8))
                                        (set! r15 L.rp.16)
                                        (jump L.get-first.6)
                                        (with-label L.rp.16 (set! rbp (+ rbp 24)))
                                        (set! r15 rax)
                                        (set! rsi r15)
                                        (set! rdi (rbp - 8))
                                        (set! r15 (rbp - 0))
                                        (jump L.+.12))))
  (check-equal? (implement-mops '(begin (with-label L.tmp.295 (set! (rbp - 0) r15)) (set! rbp (- rbp 8)) (set! rdi 56) (set! rsi 22) (set! r15 L.rp.57) (jump L.cons.10) (with-label L.rp.57 (set! rbp (+ rbp 8))) (set! rsp rax) (set! rdi rsp) (set! r15 (rbp - 0)) (jump L.car.9) (with-label L.cons.10 (set! rbx r15)) (set! rcx rdi) (set! rsp rsi) (set! rdx r12) (set! r12 (+ r12 16)) (set! rdx rdx) (set! rdx (+ rdx 1)) (mset! rdx -1 rcx) (mset! rdx 7 rsp) (set! rax rdx) (jump rbx) (with-label L.car.9 (set! rbx r15)) (set! rcx rdi) (set! rsp rcx) (set! rsp (bitwise-and rsp 7)) (compare rsp 1) (jump-if = L.tmp.293) (jump L.tmp.294) (with-label L.tmp.292 (compare rsp 6)) (jump-if != L.tmp.290) (jump L.tmp.291) (with-label L.tmp.294 (set! rsp 6)) (jump L.tmp.292) (with-label L.tmp.293 (set! rsp 14)) (jump L.tmp.292) (with-label L.tmp.291 (set! rax 3134)) (jump rbx) (with-label L.tmp.290 (set! rax (mref rcx -1))) (jump rbx)))
                '(begin
                   (with-label L.tmp.295 (set! (rbp - 0) r15))
                   (set! rbp (- rbp 8))
                   (set! rdi 56)
                   (set! rsi 22)
                   (set! r15 L.rp.57)
                   (jump L.cons.10)
                   (with-label L.rp.57 (set! rbp (+ rbp 8)))
                   (set! rsp rax)
                   (set! rdi rsp)
                   (set! r15 (rbp - 0))
                   (jump L.car.9)
                   (with-label L.cons.10 (set! rbx r15))
                   (set! rcx rdi)
                   (set! rsp rsi)
                   (set! rdx r12)
                   (set! r12 (+ r12 16))
                   (set! rdx rdx)
                   (set! rdx (+ rdx 1))
                   (set! (rdx + -1) rcx)
                   (set! (rdx + 7) rsp)
                   (set! rax rdx)
                   (jump rbx)
                   (with-label L.car.9 (set! rbx r15))
                   (set! rcx rdi)
                   (set! rsp rcx)
                   (set! rsp (bitwise-and rsp 7))
                   (compare rsp 1)
                   (jump-if = L.tmp.293)
                   (jump L.tmp.294)
                   (with-label L.tmp.292 (compare rsp 6))
                   (jump-if != L.tmp.290)
                   (jump L.tmp.291)
                   (with-label L.tmp.294 (set! rsp 6))
                   (jump L.tmp.292)
                   (with-label L.tmp.293 (set! rsp 14))
                   (jump L.tmp.292)
                   (with-label L.tmp.291 (set! rax 3134))
                   (jump rbx)
                   (with-label L.tmp.290 (set! rax (rcx + -1)))
                   (jump rbx)))
  (check-equal? (implement-mops '(begin (with-label L.tmp.276 (set! (rbp - 0) r15)) (set! rbp (- rbp 8)) (set! rdi 56) (set! rsi 22) (set! r15 L.rp.57) (jump L.cons.10) (with-label L.rp.57 (set! rbp (+ rbp 8))) (set! rsp rax) (set! rdi rsp) (set! r15 (rbp - 0)) (jump L.car.9) (with-label L.cons.10 (set! rbx r15)) (set! rcx rdi) (set! rsp rsi) (set! rdx r12) (set! r12 (+ r12 16)) (set! rdx rdx) (set! rdx (+ rdx 1)) (mset! rdx -1 rcx) (mset! rdx 7 rsp) (set! rax rdx) (jump rbx) (with-label L.car.9 (set! rbx r15)) (set! rcx rdi) (set! rsp rcx) (set! rsp (bitwise-and rsp 7)) (compare rsp 1) (jump-if = L.tmp.274) (jump L.tmp.275) (with-label L.tmp.273 (compare rsp 6)) (jump-if != L.tmp.271) (jump L.tmp.272) (with-label L.tmp.275 (set! rsp 6)) (jump L.tmp.273) (with-label L.tmp.274 (set! rsp 14)) (jump L.tmp.273) (with-label L.tmp.272 (set! rax 3134)) (jump rbx) (with-label L.tmp.271 (set! rax (mref rcx -1))) (jump rbx)))
                '(begin
                   (with-label L.tmp.276 (set! (rbp - 0) r15))
                   (set! rbp (- rbp 8))
                   (set! rdi 56)
                   (set! rsi 22)
                   (set! r15 L.rp.57)
                   (jump L.cons.10)
                   (with-label L.rp.57 (set! rbp (+ rbp 8)))
                   (set! rsp rax)
                   (set! rdi rsp)
                   (set! r15 (rbp - 0))
                   (jump L.car.9)
                   (with-label L.cons.10 (set! rbx r15))
                   (set! rcx rdi)
                   (set! rsp rsi)
                   (set! rdx r12)
                   (set! r12 (+ r12 16))
                   (set! rdx rdx)
                   (set! rdx (+ rdx 1))
                   (set! (rdx + -1) rcx)
                   (set! (rdx + 7) rsp)
                   (set! rax rdx)
                   (jump rbx)
                   (with-label L.car.9 (set! rbx r15))
                   (set! rcx rdi)
                   (set! rsp rcx)
                   (set! rsp (bitwise-and rsp 7))
                   (compare rsp 1)
                   (jump-if = L.tmp.274)
                   (jump L.tmp.275)
                   (with-label L.tmp.273 (compare rsp 6))
                   (jump-if != L.tmp.271)
                   (jump L.tmp.272)
                   (with-label L.tmp.275 (set! rsp 6))
                   (jump L.tmp.273)
                   (with-label L.tmp.274 (set! rsp 14))
                   (jump L.tmp.273)
                   (with-label L.tmp.272 (set! rax 3134))
                   (jump rbx)
                   (with-label L.tmp.271 (set! rax (rcx + -1)))
                   (jump rbx)))
  (check-equal? (implement-mops '(begin (with-label L.tmp.353 (set! (rbp - 0) r15)) (set! rbp (- rbp 8)) (set! rdi 56) (set! rsi 22) (set! r15 L.rp.58) (jump L.cons.38) (with-label L.rp.58 (set! rbp (+ rbp 8))) (set! rsp rax) (set! rdi rsp) (set! r15 (rbp - 0)) (jump L.cdr.37) (with-label L.cons.38 (set! rcx r15)) (set! rdx rdi) (set! rsp rsi) (set! rbx r12) (set! r12 (+ r12 16)) (set! rbx rbx) (set! rbx (+ rbx 1)) (mset! rbx -1 rdx) (mset! rbx 7 rsp) (set! rax rbx) (jump rcx) (with-label L.cdr.37 (set! rcx r15)) (set! rsp rdi) (set! rbx rsp) (set! rbx (bitwise-and rbx 7)) (compare rbx 1) (jump-if = L.tmp.351) (jump L.tmp.352) (with-label L.tmp.350 (compare rbx 6)) (jump-if != L.tmp.348) (jump L.tmp.349) (with-label L.tmp.352 (set! rbx 6)) (jump L.tmp.350) (with-label L.tmp.351 (set! rbx 14)) (jump L.tmp.350) (with-label L.tmp.349 (set! rax 3390)) (jump rcx) (with-label L.tmp.348 (set! rax (mref rsp 7))) (jump rcx)))
                '(begin
                   (with-label L.tmp.353 (set! (rbp - 0) r15))
                   (set! rbp (- rbp 8))
                   (set! rdi 56)
                   (set! rsi 22)
                   (set! r15 L.rp.58)
                   (jump L.cons.38)
                   (with-label L.rp.58 (set! rbp (+ rbp 8)))
                   (set! rsp rax)
                   (set! rdi rsp)
                   (set! r15 (rbp - 0))
                   (jump L.cdr.37)
                   (with-label L.cons.38 (set! rcx r15))
                   (set! rdx rdi)
                   (set! rsp rsi)
                   (set! rbx r12)
                   (set! r12 (+ r12 16))
                   (set! rbx rbx)
                   (set! rbx (+ rbx 1))
                   (set! (rbx + -1) rdx)
                   (set! (rbx + 7) rsp)
                   (set! rax rbx)
                   (jump rcx)
                   (with-label L.cdr.37 (set! rcx r15))
                   (set! rsp rdi)
                   (set! rbx rsp)
                   (set! rbx (bitwise-and rbx 7))
                   (compare rbx 1)
                   (jump-if = L.tmp.351)
                   (jump L.tmp.352)
                   (with-label L.tmp.350 (compare rbx 6))
                   (jump-if != L.tmp.348)
                   (jump L.tmp.349)
                   (with-label L.tmp.352 (set! rbx 6))
                   (jump L.tmp.350)
                   (with-label L.tmp.351 (set! rbx 14))
                   (jump L.tmp.350)
                   (with-label L.tmp.349 (set! rax 3390))
                   (jump rcx)
                   (with-label L.tmp.348 (set! rax (rsp + 7)))
                   (jump rcx)))
  (check-equal? (implement-mops '(begin (with-label L.tmp.379 (set! (rbp - 0) r15)) (set! rbp (- rbp 8)) (set! rdi 56) (set! rsi 22) (set! r15 L.rp.58) (jump L.cons.38) (with-label L.rp.58 (set! rbp (+ rbp 8))) (set! rsp rax) (set! rdi rsp) (set! r15 (rbp - 0)) (jump L.cdr.37) (with-label L.cons.38 (set! rcx r15)) (set! rdx rdi) (set! rsp rsi) (set! rbx r12) (set! r12 (+ r12 16)) (set! rbx rbx) (set! rbx (+ rbx 1)) (mset! rbx -1 rdx) (mset! rbx 7 rsp) (set! rax rbx) (jump rcx) (with-label L.cdr.37 (set! rcx r15)) (set! rsp rdi) (set! rbx rsp) (set! rbx (bitwise-and rbx 7)) (compare rbx 1) (jump-if = L.tmp.377) (jump L.tmp.378) (with-label L.tmp.376 (compare rbx 6)) (jump-if != L.tmp.374) (jump L.tmp.375) (with-label L.tmp.378 (set! rbx 6)) (jump L.tmp.376) (with-label L.tmp.377 (set! rbx 14)) (jump L.tmp.376) (with-label L.tmp.375 (set! rax 3390)) (jump rcx) (with-label L.tmp.374 (set! rax (mref rsp 7))) (jump rcx)))
                '(begin
                   (with-label L.tmp.379 (set! (rbp - 0) r15))
                   (set! rbp (- rbp 8))
                   (set! rdi 56)
                   (set! rsi 22)
                   (set! r15 L.rp.58)
                   (jump L.cons.38)
                   (with-label L.rp.58 (set! rbp (+ rbp 8)))
                   (set! rsp rax)
                   (set! rdi rsp)
                   (set! r15 (rbp - 0))
                   (jump L.cdr.37)
                   (with-label L.cons.38 (set! rcx r15))
                   (set! rdx rdi)
                   (set! rsp rsi)
                   (set! rbx r12)
                   (set! r12 (+ r12 16))
                   (set! rbx rbx)
                   (set! rbx (+ rbx 1))
                   (set! (rbx + -1) rdx)
                   (set! (rbx + 7) rsp)
                   (set! rax rbx)
                   (jump rcx)
                   (with-label L.cdr.37 (set! rcx r15))
                   (set! rsp rdi)
                   (set! rbx rsp)
                   (set! rbx (bitwise-and rbx 7))
                   (compare rbx 1)
                   (jump-if = L.tmp.377)
                   (jump L.tmp.378)
                   (with-label L.tmp.376 (compare rbx 6))
                   (jump-if != L.tmp.374)
                   (jump L.tmp.375)
                   (with-label L.tmp.378 (set! rbx 6))
                   (jump L.tmp.376)
                   (with-label L.tmp.377 (set! rbx 14))
                   (jump L.tmp.376)
                   (with-label L.tmp.375 (set! rax 3390))
                   (jump rcx)
                   (with-label L.tmp.374 (set! rax (rsp + 7)))
                   (jump rcx))))
